apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: konflux-showcase-ci-ephemeral
spec:
  description: |
    integration test which requests an ephemeral cluster provisioned by konflux and deployes RHDH
    using Helm and runs the e2etest suite onto that instance
  params:
    - description: Snapshot of the application
      name: SNAPSHOT
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - description: Namespace where the the Operator bundle will be deployed.
      name: NAMESPACE
      default: default
      type: string
  tasks:
    - name: parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/integration-examples
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/test_metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
    - name: provision-eaas-space
      runAfter:
        - parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: task/eaas-provision-space/0.1/eaas-provision-space.yaml
      params:
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
    - name: provision-cluster
      runAfter:
        - provision-eaas-space
      taskSpec:
        results:
          - name: clusterName
            value: "$(steps.create-cluster.results.clusterName)"
        steps:
          - name: get-supported-versions
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-supported-ephemeral-cluster-versions/0.1/eaas-get-supported-ephemeral-cluster-versions.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
          - name: pick-version
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-latest-openshift-version-by-prefix/0.1/eaas-get-latest-openshift-version-by-prefix.yaml
            params:
              - name: prefix
                value: "$(steps.get-supported-versions.results.versions[0])."
          - name: create-cluster
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-create-ephemeral-cluster-hypershift-aws/0.1/eaas-create-ephemeral-cluster-hypershift-aws.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: version
                value: "$(steps.pick-version.results.version)"
          - name: openshift-ci-tests
            runAfter:
              - provision-cluster
            taskSpec:
              params:
                - name: bundleImage
                  type: string
                - name: namespace
                  type: string
              volumes:
                - name: credentials
                  emptyDir: {}
              steps:
                - name: get-kubeconfig
                  ref:
                    resolver: git
                    params:
                      - name: url
                        value: https://github.com/konflux-ci/build-definitions.git
                      - name: revision
                        value: main
                      - name: pathInRepo
                        value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
                  params:
                    - name: eaasSpaceSecretRef
                      value: $(tasks.provision-eaas-space.results.secretRef)
                    - name: clusterName
                      value: "$(tasks.provision-cluster.results.clusterName)"
                    - name: credentials
                      value: credentials
                - name: deploy-and-test
                  image: ubuntu
                  env:
                    - name: RHDH_SECRETS1
                      value: "/credentials/$(steps.get-kubeconfig.results.username)"
                    - name: RHDH_SECRETS2
                      value: "/credentials/$(steps.get-kubeconfig.results.passwordPath)"
                    - name: RHDH_SECRETS3
                      value: "/credentials/$(steps.get-kubeconfig.results.apiServerUrl)"
                  volumeMounts:
                    - name: credentials
                      mountPath: /credentials
                  script: |
                    #!/usr/bin/env bash
                    export HOME WORKSPACE
                    HOME=/tmp
                    WORKSPACE=$(pwd)
                    cd /tmp || exit
                    ls /credentials
                    cat ${RHDH_SECRETS1}
                    cat ${RHDH_SECRETS2}
                    cat ${RHDH_SECRETS3}

                    # API_SERVER_URL=$(cat /etc/secrets/API_SERVER_URL)
                    # USERNAME=$(cat /etc/secrets/USERNAME)
                    # PASSWORD=$(cat /etc/secrets/PASSWORD)
                    # oc login ${API_SERVER_URL} --username=${USERNAME} --password=${PASSWORD}
                    # oc whoami --show-console
                    # curl -sSLO https://raw.githubusercontent.com/rhdh-bot/openshift-helm-charts/redhat-developer-hub-1.2-150-CI/installation/install.sh && chmod +x install.sh
                    # ./install.sh 1.2-150-CI --namespace showcase --chartrepo
                  